{"mappings":"YACC,IACOA,EACAC,EACAC,EACAC,EAgDEC,EAnDFJ,EAAaK,SAASC,cAAc,sBACpCL,EAAcI,SAASC,cAAc,iBACrCJ,EAAeG,SAASC,cAAc,kBACtCH,EAAa,WACjB,IAAMI,EAC0C,SAA9CN,EAAYO,aAAa,mBAA+B,EAC1DP,EAAYQ,aAAa,iBAAkBF,GAC3CP,EAAWU,UAAUC,OAAO,WAI5BC,eAH0BL,EAEtB,mBADA,qBAE6BF,SAASQ,K,EAE5CZ,EAAYa,iBAAiB,QAASX,GACtCD,EAAaY,iBAAiB,QAASX,GAEvCH,EAAWe,iBAAiB,KAAKC,SAAQ,SAAAC,GACvCA,EAAKH,iBAAiB,SAAS,WAC7Bd,EAAWU,UAAUQ,OAAO,U,OAOhCC,OAAOC,WAAW,sBAAsBN,iBAAiB,UAAU,SAAAO,GAC5DA,EAAEC,UACPtB,EAAWU,UAAUQ,OAAO,WAC5BjB,EAAYQ,aAAa,iBAAiB,GAC1CG,eAAeW,iBAAiBlB,SAASQ,M,IAK5C,WACG,IAAMW,EAAO,CACTC,aAAcpB,SAASC,cAAc,qBACrCoB,cAAerB,SAASC,cAAc,sBACtCqB,MAAOtB,SAASC,cAAc,iBAMlC,SAASsB,IACLJ,EAAKG,MAAMjB,UAAUC,OAAO,Y,CAJhCa,EAAKC,aAAaX,iBAAiB,QAASc,GAC5CJ,EAAKE,cAAcZ,iBAAiB,QAASc,EAKhD,CAbA,GAiBY,mBAAHxB,EAA6Xe,OAAOU,QAAQC,WAApXR,UAAUlB,EAAEkB,QAAQlB,EAAE2B,mBAAmB3B,EAAE4B,oBAAoB5B,EAAE6B,uBAAuB,SAASZ,GAAG,IAAI,IAAIa,EAAEC,KAAKC,GAAGF,EAAE7B,UAAU6B,EAAEG,eAAetB,iBAAiBM,GAAGiB,EAAE,EAAEF,EAAEE,IAAIF,EAAEE,KAAKJ,KAAKI,EAAE,OAAOC,QAAQH,EAAEE,G,GAAM,mBAAmBlC,EAAEoC,UAAUpC,EAAEoC,QAAQ,SAASnB,GAAG,IAAI,IAAIa,EAAEC,KAAKD,GAAG,IAAIA,EAAEO,UAAU,CAAC,GAAGP,EAAEZ,QAAQD,GAAG,OAAOa,EAAEA,EAAEA,EAAEQ,U,CAAW,OAAO,I,GAG/XrC,SAASS,iBAAiB,oBAAoB,W,kDAIvC6B,EAAetC,SAASC,cAAiB,qBACzCsC,EAAuBvC,SAACU,iBAAc,mBAI1C8B,EAAA7B,SAA8B,SACR8B,GAEnBA,EAAAhC,iBAAA,kBACIO,G,yDASahB,SAAKC,cAAa,sBAChByC,EAAS,M,wBAMMJ,EAARjC,UAAVsC,IAAJ,S,OAM4BJ,EAAb5B,SAAR,SAAT8B,GAE2BA,EAALhC,iBAAjB,SAAT,SAATO,GACmBc,KAALK,QAAR,UAEmB9B,UAAVQ,OAAP,UAC6ByB,EAARjC,UAAVQ,OAAP,S,OAM8Bb,SAATQ,KAALC,iBAAjB,SAAT,SAAAO,GAGyB,IAFCA,EAAF4B,UAIQ5C,SAATC,cAAd,iBAAXI,UAAUQ,OAAO,UACiBb,SAATC,cAAd,YAAZI,UAAMQ,OAAO,U,IAE2B,GAGGyB,EAAR7B,iBAAjB,SAAT,WAC8BT,SAATC,cAAd,iBAAjBI,UAAQQ,OAAO,UACyBiB,KAALzB,UAAVQ,OAAP,S","sources":["src/index.js"],"sourcesContent":["// mobile-menu\n(() => {\n  const mobileMenu = document.querySelector('.js-menu-container');\n  const openMenuBtn = document.querySelector('.js-open-menu');\n  const closeMenuBtn = document.querySelector('.js-close-menu');\n  const toggleMenu = () => {\n    const isMenuOpen =\n      openMenuBtn.getAttribute('aria-expanded') === 'true' || false;\n    openMenuBtn.setAttribute('aria-expanded', !isMenuOpen);\n    mobileMenu.classList.toggle('is-open');\n    const scrollLockMethod = !isMenuOpen\n      ? 'disableBodyScroll'\n      : 'enableBodyScroll';\n    bodyScrollLock[scrollLockMethod](document.body);\n  };\n  openMenuBtn.addEventListener('click', toggleMenu);\n  closeMenuBtn.addEventListener('click', toggleMenu);\n\n  mobileMenu.querySelectorAll('a').forEach(link => {\n    link.addEventListener('click', () => {\n      mobileMenu.classList.remove('is-open');\n    })\n   } );\n\n  // Закрываем мобильное меню на более широких экранах\n  // в случае изменения ориентации устройства.\n  // Close the mobile menu on wider screens if the device orientation changes\n  window.matchMedia('(min-width: 768px)').addEventListener('change', e => {\n    if (!e.matches) return;\n    mobileMenu.classList.remove('is-open');\n    openMenuBtn.setAttribute('aria-expanded', false);\n    bodyScrollLock.enableBodyScroll(document.body);\n  });\n})();\n\n// Modal\n(() => {\n    const refs = {\n        openModalBtn: document.querySelector(\"[data-modal-open]\"),\n        closeModalBtn: document.querySelector(\"[data-modal-close]\"),\n        modal: document.querySelector(\"[data-modal]\"),\n    };\n\n    refs.openModalBtn.addEventListener(\"click\", toggleModal);\n    refs.closeModalBtn.addEventListener(\"click\", toggleModal);\n\n    function toggleModal() {\n        refs.modal.classList.toggle(\"is-hidden\");\n    }\n})();\n\n// Modal +\n\n!function(e){\"function\"!=typeof e.matches&&(e.matches=e.msMatchesSelector||e.mozMatchesSelector||e.webkitMatchesSelector||function(e){for(var t=this,o=(t.document||t.ownerDocument).querySelectorAll(e),n=0;o[n]&&o[n]!==t;)++n;return Boolean(o[n])}),\"function\"!=typeof e.closest&&(e.closest=function(e){for(var t=this;t&&1===t.nodeType;){if(t.matches(e))return t;t=t.parentNode}return null})}(window.Element.prototype);\n\n\ndocument.addEventListener('DOMContentLoaded', function() {\n\n   /* Записываем в переменные массив элементов-кнопок и подложку.\n      Подложке зададим id, чтобы не влиять на другие элементы с классом overlay*/\n   var modalButtons = document.querySelectorAll('.js-open-modal'),\n       overlay      = document.querySelector('.js-overlay-modal'),\n       closeButtons = document.querySelectorAll('.js-modal-close');\n\n\n   /* Перебираем массив кнопок */\n   modalButtons.forEach(function(item){\n\n      /* Назначаем каждой кнопке обработчик клика */\n      item.addEventListener('click', function(e) {\n\n         /* Предотвращаем стандартное действие элемента. Так как кнопку разные\n            люди могут сделать по-разному. Кто-то сделает ссылку, кто-то кнопку.\n            Нужно подстраховаться. */\n         e.preventDefault();\n\n         /* При каждом клике на кнопку мы будем забирать содержимое атрибута data-modal\n            и будем искать модальное окно с таким же атрибутом. */\n         var modalId = this.getAttribute('data-modal'),\n             modalElem = document.querySelector('.modal[data-modal=\"' + modalId + '\"]');\n\n\n         /* После того как нашли нужное модальное окно, добавим классы\n            подложке и окну чтобы показать их. */\n         modalElem.classList.add('active');\n         overlay.classList.add('active');\n      }); // end click\n\n   }); // end foreach\n\n\n   closeButtons.forEach(function(item){\n\n      item.addEventListener('click', function(e) {\n         var parentModal = this.closest('.modal');\n\n         parentModal.classList.remove('active');\n         overlay.classList.remove('active');\n      });\n\n   }); // end foreach\n\n\n    document.body.addEventListener('keyup', function (e) {\n        var key = e.keyCode;\n\n        if (key == 27) {\n\n            document.querySelector('.modal.active').classList.remove('active');\n            document.querySelector('.overlay').classList.remove('active');\n        };\n    }, false);\n\n\n    overlay.addEventListener('click', function() {\n        document.querySelector('.modal.active').classList.remove('active');\n        this.classList.remove('active');\n    });\n\n\n\n\n}); // end ready"],"names":["mobileMenu","openMenuBtn","closeMenuBtn","toggleMenu","e1","document","querySelector","isMenuOpen","getAttribute","setAttribute","classList","toggle","bodyScrollLock","body","addEventListener","querySelectorAll","forEach","link","remove","window","matchMedia","e","matches","enableBodyScroll","refs","openModalBtn","closeModalBtn","modal","toggleModal","Element","prototype","msMatchesSelector","mozMatchesSelector","webkitMatchesSelector","t","this","o","ownerDocument","n","Boolean","closest","nodeType","parentNode","overlay","closeButtons","modalButtons","item","modalId","add","keyCode"],"version":3,"file":"index.359a3bce.js.map"}