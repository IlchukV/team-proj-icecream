{"mappings":"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","sources":["src/js/modal.js","src/js/sim-slider.js","src/js/swiper.js","src/js/mobile-menu.js"],"sourcesContent":["// Modal +\n\n!function(e){\"function\"!=typeof e.matches&&(e.matches=e.msMatchesSelector||e.mozMatchesSelector||e.webkitMatchesSelector||function(e){for(var t=this,o=(t.document||t.ownerDocument).querySelectorAll(e),n=0;o[n]&&o[n]!==t;)++n;return Boolean(o[n])}),\"function\"!=typeof e.closest&&(e.closest=function(e){for(var t=this;t&&1===t.nodeType;){if(t.matches(e))return t;t=t.parentNode}return null})}(window.Element.prototype);\n\n\ndocument.addEventListener('DOMContentLoaded', function() {\n\n   /* Записываем в переменные массив элементов-кнопок и подложку.\n      Подложке зададим id, чтобы не влиять на другие элементы с классом overlay*/\n   var modalButtons = document.querySelectorAll('.js-open-modal'),\n       overlay      = document.querySelector('.js-overlay-modal'),\n       closeButtons = document.querySelectorAll('.js-modal-close');\n\n\n   /* Перебираем массив кнопок */\n   modalButtons.forEach(function(item){\n\n      /* Назначаем каждой кнопке обработчик клика */\n      item.addEventListener('click', function(e) {\n\n         /* Предотвращаем стандартное действие элемента. Так как кнопку разные\n            люди могут сделать по-разному. Кто-то сделает ссылку, кто-то кнопку.\n            Нужно подстраховаться. */\n         e.preventDefault();\n\n         /* При каждом клике на кнопку мы будем забирать содержимое атрибута data-modal\n            и будем искать модальное окно с таким же атрибутом. */\n         var modalId = this.getAttribute('data-modal'),\n             modalElem = document.querySelector('.modal[data-modal=\"' + modalId + '\"]');\n\n\n         /* После того как нашли нужное модальное окно, добавим классы\n            подложке и окну чтобы показать их. */\n         modalElem.classList.remove('is-hidden');\n         overlay.classList.remove('is-hidden');\n         document.body.classList.add('is-not-overflow');\n      }); // end click\n\n   }); // end foreach\n\n\n   closeButtons.forEach(function(item){\n\n      item.addEventListener('click', function(e) {\n         var parentModal = this.closest('.modal');\n\n         parentModal.classList.add('is-hidden');\n         overlay.classList.add('is-hidden');\n         document.body.classList.remove('is-not-overflow');\n      });\n\n   }); // end foreach\n\n\n}); // end ready\n","function Sim(sldrId) {\n\n\tlet id = document.getElementById(sldrId);\n\tif(id) {\n\t\tthis.sldrRoot = id\n\t}\n\telse {\n\t\tthis.sldrRoot = document.querySelector('.sim-slider')\n\t};\n\n\t// Carousel objects\n\tthis.sldrList = this.sldrRoot.querySelector('.sim-slider-list');\n\tthis.sldrElements = this.sldrList.querySelectorAll('.sim-slider-element');\n\tthis.sldrElemFirst = this.sldrList.querySelector('.sim-slider-element');\n\tthis.leftArrow = this.sldrRoot.querySelector('div.sim-slider-arrow-left');\n\tthis.rightArrow = this.sldrRoot.querySelector('div.sim-slider-arrow-right');\n\tthis.indicatorDots = this.sldrRoot.querySelector('div.sim-slider-dots');\n\n\t// Initialization\n\tthis.options = Sim.defaults;\n\tSim.initialize(this)\n};\n\nSim.defaults = {\n\n\t// Default options for the carousel\n\tloop: true,     // Бесконечное зацикливание слайдера\n\tauto: true,     // Автоматическое пролистывание\n\tinterval: 5000, // Интервал между пролистыванием элементов (мс)\n\tarrows: true,   // Пролистывание стрелками\n\tdots: true      // Индикаторные точки\n};\n\nSim.prototype.elemPrev = function(num) {\n\tnum = num || 1;\n\n\tlet prevElement = this.currentElement;\n\tthis.currentElement -= num;\n\tif(this.currentElement < 0) this.currentElement = this.elemCount-1;\n\n\tif(!this.options.loop) {\n\t\tif(this.currentElement == 0) {\n\t\t\tthis.leftArrow.style.display = 'none'\n\t\t};\n\t\tthis.rightArrow.style.display = 'block'\n\t};\n\t\n\tthis.sldrElements[this.currentElement].style.opacity = '1';\n\tthis.sldrElements[prevElement].style.opacity = '0';\n\n\tif(this.options.dots) {\n\t\tthis.dotOn(prevElement); this.dotOff(this.currentElement)\n\t}\n};\n\nSim.prototype.elemNext = function(num) {\n\tnum = num || 1;\n\t\n\tlet prevElement = this.currentElement;\n\tthis.currentElement += num;\n\tif(this.currentElement >= this.elemCount) this.currentElement = 0;\n\n\tif(!this.options.loop) {\n\t\tif(this.currentElement == this.elemCount-1) {\n\t\t\tthis.rightArrow.style.display = 'none'\n\t\t};\n\t\tthis.leftArrow.style.display = 'block'\n\t};\n\n\tthis.sldrElements[this.currentElement].style.opacity = '1';\n\tthis.sldrElements[prevElement].style.opacity = '0';\n\n\tif(this.options.dots) {\n\t\tthis.dotOn(prevElement); this.dotOff(this.currentElement)\n\t}\n};\n\nSim.prototype.dotOn = function(num) {\n\tthis.indicatorDotsAll[num].style.cssText = 'background-color:#BBB; cursor:pointer;'\n};\n\nSim.prototype.dotOff = function(num) {\n\tthis.indicatorDotsAll[num].style.cssText = 'background-color:#556; cursor:default;'\n};\n\nSim.initialize = function(that) {\n\n\t// Constants\n\tthat.elemCount = that.sldrElements.length; // Количество элементов\n\n\t// Variables\n\tthat.currentElement = 0;\n\tlet bgTime = getTime();\n\n\t// Functions\n\tfunction getTime() {\n\t\treturn new Date().getTime();\n\t};\n\tfunction setAutoScroll() {\n\t\tthat.autoScroll = setInterval(function() {\n\t\t\tlet fnTime = getTime();\n\t\t\tif(fnTime - bgTime + 10 > that.options.interval) {\n\t\t\t\tbgTime = fnTime; that.elemNext()\n\t\t\t}\n\t\t}, that.options.interval)\n\t};\n\n\t// Start initialization\n\tif(that.elemCount <= 1) {   // Отключить навигацию\n\t\tthat.options.auto = false; that.options.arrows = false; that.options.dots = false;\n\t\tthat.leftArrow.style.display = 'none'; that.rightArrow.style.display = 'none'\n\t};\n\tif(that.elemCount >= 1) {   // показать первый элемент\n\t\tthat.sldrElemFirst.style.opacity = '1';\n\t};\n\n\tif(!that.options.loop) {\n\t\tthat.leftArrow.style.display = 'none';  // отключить левую стрелку\n\t\tthat.options.auto = false; // отключить автопркрутку\n\t}\n\telse if(that.options.auto) {   // инициализация автопрокруки\n\t\tsetAutoScroll();\n\t\t// Остановка прокрутки при наведении мыши на элемент\n\t\tthat.sldrList.addEventListener('mouseenter', function() {clearInterval(that.autoScroll)}, false);\n\t\tthat.sldrList.addEventListener('mouseleave', setAutoScroll, false)\n\t};\n\n\tif(that.options.arrows) {  // инициализация стрелок\n\t\tthat.leftArrow.addEventListener('click', function() {\n\t\t\tlet fnTime = getTime();\n\t\t\tif(fnTime - bgTime > 1000) {\n\t\t\t\tbgTime = fnTime; that.elemPrev()\n\t\t\t}\n\t\t}, false);\n\t\tthat.rightArrow.addEventListener('click', function() {\n\t\t\tlet fnTime = getTime();\n\t\t\tif(fnTime - bgTime > 1000) {\n\t\t\t\tbgTime = fnTime; that.elemNext()\n\t\t\t}\n\t\t}, false)\n\t}\n\telse {\n\t\tthat.leftArrow.style.display = 'none'; that.rightArrow.style.display = 'none'\n\t};\n\n\tif(that.options.dots) {  // инициализация индикаторных точек\n\t\tlet sum = '', diffNum;\n\t\tfor(let i=0; i<that.elemCount; i++) {\n\t\t\tsum += '<span class=\"sim-dot\"></span>'\n\t\t};\n\t\tthat.indicatorDots.innerHTML = sum;\n\t\tthat.indicatorDotsAll = that.sldrRoot.querySelectorAll('span.sim-dot');\n\t\t// Назначаем точкам обработчик события 'click'\n\t\tfor(let n=0; n<that.elemCount; n++) {\n\t\t\tthat.indicatorDotsAll[n].addEventListener('click', function() {\n\t\t\t\tdiffNum = Math.abs(n - that.currentElement);\n\t\t\t\tif(n < that.currentElement) {\n\t\t\t\t\tbgTime = getTime(); that.elemPrev(diffNum)\n\t\t\t\t}\n\t\t\t\telse if(n > that.currentElement) {\n\t\t\t\t\tbgTime = getTime(); that.elemNext(diffNum)\n\t\t\t\t}\n\t\t\t\t// Если n == that.currentElement ничего не делаем\n\t\t\t}, false)\n\t\t};\n\t\tthat.dotOff(0);  // точка[0] выключена, остальные включены\n\t\tfor(let i=1; i<that.elemCount; i++) {\n\t\t\tthat.dotOn(i)\n\t\t}\n\t}\n};\n\nnew Sim();"," new Swiper('.swiper', {\n  pagination: {\n    el: '.swiper-pagination',\n    \n    clickable: true\n    },\n\n    autoplay: {\n        delay: 5000,\n        stopOnLastSlide: false,\n        disableOnInteraction: false\n    },\n\n    speed: 500,\n\n    effect: 'fade',\n\n    fadeEffect: {\n        crossFade: true\n    },\n});","// mobile-menu\n(() => {\n  const mobileMenu = document.querySelector('.js-menu-container');\n  const openMenuBtn = document.querySelector('.js-open-menu');\n  const closeMenuBtn = document.querySelector('.js-close-menu');\n  const toggleMenu = () => {\n    const isMenuOpen =\n      openMenuBtn.getAttribute('aria-expanded') === 'true' || false;\n    openMenuBtn.setAttribute('aria-expanded', !isMenuOpen);\n    mobileMenu.classList.toggle('is-open');\n    const scrollLockMethod = !isMenuOpen\n      ? 'disableBodyScroll'\n      : 'enableBodyScroll';\n    bodyScrollLock[scrollLockMethod](document.body);\n  };\n  openMenuBtn.addEventListener('click', toggleMenu);\n  closeMenuBtn.addEventListener('click', toggleMenu);\n\n  mobileMenu.querySelectorAll('a').forEach(link => {\n    link.addEventListener('click', () => {\n      mobileMenu.classList.remove('is-open');\n    })\n   } );\n\n  // Закрываем мобильное меню на более широких экранах\n  // в случае изменения ориентации устройства.\n  // Close the mobile menu on wider screens if the device orientation changes\n  window.matchMedia('(min-width: 768px)').addEventListener('change', e => {\n    if (!e.matches) return;\n    mobileMenu.classList.remove('is-open');\n    openMenuBtn.setAttribute('aria-expanded', false);\n    bodyScrollLock.enableBodyScroll(document.body);\n  });\n})();"],"names":["e1","$9926e3bc75f2b0ba$var$Sim","sldrId","id","document","getElementById","this","sldrRoot","querySelector","sldrList","sldrElements","querySelectorAll","sldrElemFirst","leftArrow","rightArrow","indicatorDots","options","defaults","initialize","Swiper","pagination","el","clickable","autoplay","delay","stopOnLastSlide","disableOnInteraction","speed","effect","fadeEffect","crossFade","mobileMenu","openMenuBtn","closeMenuBtn","toggleMenu","isMenuOpen","getAttribute","setAttribute","classList","toggle","bodyScrollLock","body","addEventListener","forEach","link","remove","window","matchMedia","e","matches","enableBodyScroll","Element","prototype","msMatchesSelector","mozMatchesSelector","webkitMatchesSelector","t","o","ownerDocument","n","Boolean","closest","nodeType","parentNode","overlay","closeButtons","modalButtons","item","modalId","add","loop","auto","interval","arrows","dots","elemPrev","num","prevElement","currentElement","elemCount","style","display","opacity","dotOn","dotOff","elemNext","indicatorDotsAll","cssText","that","length","bgTime","getTime","Date","setAutoScroll","autoScroll","setInterval","fnTime","clearInterval","diffNum","sum","i","innerHTML","Math","abs","i1"],"version":3,"file":"index.1b29cc7e.js.map"}