{"mappings":"AA6DC,IAASA,EC7DT,IAAIC,OAAO,UAAW,CACrBC,WAAY,CACVC,GAAI,qBAEJC,WAAW,GAGXC,SAAU,CACNC,MAAO,IACPC,iBAAiB,EACjBC,sBAAsB,GAG1BC,MAAO,IAEPC,OAAQ,OAERC,WAAY,CACRC,WAAW,KDTlB,MACC,MAAMC,EAAaC,SAASC,cAAc,sBACpCC,EAAcF,SAASC,cAAc,iBACrCE,EAAeH,SAASC,cAAc,kBACtCG,EAAa,KACjB,MAAMC,EAC0C,SAA9CH,EAAYI,aAAa,mBAA+B,EAC1DJ,EAAYK,aAAa,iBAAkBF,GAC3CN,EAAWS,UAAUC,OAAO,WAI5BC,eAH0BL,EAEtB,mBADA,qBAE6BL,SAASW,KAAK,EAEjDT,EAAYU,iBAAiB,QAASR,GACtCD,EAAaS,iBAAiB,QAASR,GAEvCL,EAAWc,iBAAiB,KAAKC,SAAQC,IACvCA,EAAKH,iBAAiB,SAAS,KAC7Bb,EAAWS,UAAUQ,OAAO,UAAU,GACtC,IAMJC,OAAOC,WAAW,sBAAsBN,iBAAiB,UAAUO,IAC5DA,EAAEC,UACPrB,EAAWS,UAAUQ,OAAO,WAC5Bd,EAAYK,aAAa,iBAAiB,GAC1CG,eAAeW,iBAAiBrB,SAASW,MAAK,GAEjD,EAhCA,GAmCA,MACG,MAAMW,EAAO,CACTC,aAAcvB,SAASC,cAAc,qBACrCuB,cAAexB,SAASC,cAAc,sBACtCwB,MAAOzB,SAASC,cAAc,iBAMlC,SAASyB,IACLJ,EAAKG,MAAMjB,UAAUC,OAAO,Y,CAJhCa,EAAKC,aAAaX,iBAAiB,QAASc,GAC5CJ,EAAKE,cAAcZ,iBAAiB,QAASc,EAKhD,EAbA,GAiBY,mBAAHxC,EAA6X+B,OAAOU,QAAQC,WAApXR,UAAUlC,EAAEkC,QAAQlC,EAAE2C,mBAAmB3C,EAAE4C,oBAAoB5C,EAAE6C,uBAAuB,SAASZ,GAAG,IAAI,IAAIa,EAAEC,KAAKC,GAAGF,EAAEhC,UAAUgC,EAAEG,eAAetB,iBAAiBM,GAAGiB,EAAE,EAAEF,EAAEE,IAAIF,EAAEE,KAAKJ,KAAKI,EAAE,OAAOC,QAAQH,EAAEE,G,GAAM,mBAAmBlD,EAAEoD,UAAUpD,EAAEoD,QAAQ,SAASnB,GAAG,IAAI,IAAIa,EAAEC,KAAKD,GAAG,IAAIA,EAAEO,UAAU,CAAC,GAAGP,EAAEZ,QAAQD,GAAG,OAAOa,EAAEA,EAAEA,EAAEQ,U,CAAW,OAAO,I,GAG/XxC,SAASY,iBAAiB,oBAAoB,W,kDAIvC6B,EAAezC,SAASC,cAAiB,qBACzCyC,EAAuB1C,SAACa,iBAAc,mBAI1C8B,EAAA7B,SAA8B,SACR8B,GAEnBA,EAAAhC,iBAAA,kBACIO,G,yDASanB,SAAKC,cAAa,sBAChB4C,EAAS,M,wBAMMJ,EAARjC,UAAVsC,IAAJ,S,OAM4BJ,EAAb5B,SAAR,SAAT8B,GAE2BA,EAALhC,iBAAjB,SAAT,SAATO,GACmBc,KAALK,QAAR,UAEmB9B,UAAVQ,OAAP,UAC6ByB,EAARjC,UAAVQ,OAAP,S,OAM8BhB,SAATW,KAALC,iBAAjB,SAAT,SAAAO,GAGyB,IAFCA,EAAF4B,UAIQ/C,SAATC,cAAd,iBAAXO,UAAUQ,OAAO,UACiBhB,SAATC,cAAd,YAAZO,UAAMQ,OAAO,U,IAE2B,GAGGyB,EAAR7B,iBAAjB,SAAT,WAC8BZ,SAATC,cAAd,iBAAjBO,UAAQQ,OAAO,UACyBiB,KAALzB,UAAVQ,OAAP,S","sources":["src/index.js","src/js/swiper.js"],"sourcesContent":["\nimport './js/swiper';\n\n\n\n\n\n\n// mobile-menu\n(() => {\n  const mobileMenu = document.querySelector('.js-menu-container');\n  const openMenuBtn = document.querySelector('.js-open-menu');\n  const closeMenuBtn = document.querySelector('.js-close-menu');\n  const toggleMenu = () => {\n    const isMenuOpen =\n      openMenuBtn.getAttribute('aria-expanded') === 'true' || false;\n    openMenuBtn.setAttribute('aria-expanded', !isMenuOpen);\n    mobileMenu.classList.toggle('is-open');\n    const scrollLockMethod = !isMenuOpen\n      ? 'disableBodyScroll'\n      : 'enableBodyScroll';\n    bodyScrollLock[scrollLockMethod](document.body);\n  };\n  openMenuBtn.addEventListener('click', toggleMenu);\n  closeMenuBtn.addEventListener('click', toggleMenu);\n\n  mobileMenu.querySelectorAll('a').forEach(link => {\n    link.addEventListener('click', () => {\n      mobileMenu.classList.remove('is-open');\n    })\n   } );\n\n  // Закрываем мобильное меню на более широких экранах\n  // в случае изменения ориентации устройства.\n  // Close the mobile menu on wider screens if the device orientation changes\n  window.matchMedia('(min-width: 768px)').addEventListener('change', e => {\n    if (!e.matches) return;\n    mobileMenu.classList.remove('is-open');\n    openMenuBtn.setAttribute('aria-expanded', false);\n    bodyScrollLock.enableBodyScroll(document.body);\n  });\n})();\n\n// Modal\n(() => {\n    const refs = {\n        openModalBtn: document.querySelector(\"[data-modal-open]\"),\n        closeModalBtn: document.querySelector(\"[data-modal-close]\"),\n        modal: document.querySelector(\"[data-modal]\"),\n    };\n\n    refs.openModalBtn.addEventListener(\"click\", toggleModal);\n    refs.closeModalBtn.addEventListener(\"click\", toggleModal);\n\n    function toggleModal() {\n        refs.modal.classList.toggle(\"is-hidden\");\n    }\n})();\n\n// Modal +\n\n!function(e){\"function\"!=typeof e.matches&&(e.matches=e.msMatchesSelector||e.mozMatchesSelector||e.webkitMatchesSelector||function(e){for(var t=this,o=(t.document||t.ownerDocument).querySelectorAll(e),n=0;o[n]&&o[n]!==t;)++n;return Boolean(o[n])}),\"function\"!=typeof e.closest&&(e.closest=function(e){for(var t=this;t&&1===t.nodeType;){if(t.matches(e))return t;t=t.parentNode}return null})}(window.Element.prototype);\n\n\ndocument.addEventListener('DOMContentLoaded', function() {\n\n   /* Записываем в переменные массив элементов-кнопок и подложку.\n      Подложке зададим id, чтобы не влиять на другие элементы с классом overlay*/\n   var modalButtons = document.querySelectorAll('.js-open-modal'),\n       overlay      = document.querySelector('.js-overlay-modal'),\n       closeButtons = document.querySelectorAll('.js-modal-close');\n\n\n   /* Перебираем массив кнопок */\n   modalButtons.forEach(function(item){\n\n      /* Назначаем каждой кнопке обработчик клика */\n      item.addEventListener('click', function(e) {\n\n         /* Предотвращаем стандартное действие элемента. Так как кнопку разные\n            люди могут сделать по-разному. Кто-то сделает ссылку, кто-то кнопку.\n            Нужно подстраховаться. */\n         e.preventDefault();\n\n         /* При каждом клике на кнопку мы будем забирать содержимое атрибута data-modal\n            и будем искать модальное окно с таким же атрибутом. */\n         var modalId = this.getAttribute('data-modal'),\n             modalElem = document.querySelector('.modal[data-modal=\"' + modalId + '\"]');\n\n\n         /* После того как нашли нужное модальное окно, добавим классы\n            подложке и окну чтобы показать их. */\n         modalElem.classList.add('active');\n         overlay.classList.add('active');\n      }); // end click\n\n   }); // end foreach\n\n\n   closeButtons.forEach(function(item){\n\n      item.addEventListener('click', function(e) {\n         var parentModal = this.closest('.modal');\n\n         parentModal.classList.remove('active');\n         overlay.classList.remove('active');\n      });\n\n   }); // end foreach\n\n\n    document.body.addEventListener('keyup', function (e) {\n        var key = e.keyCode;\n\n        if (key == 27) {\n\n            document.querySelector('.modal.active').classList.remove('active');\n            document.querySelector('.overlay').classList.remove('active');\n        };\n    }, false);\n\n\n    overlay.addEventListener('click', function() {\n        document.querySelector('.modal.active').classList.remove('active');\n        this.classList.remove('active');\n    });\n\n\n\n\n}); // end ready"," new Swiper('.swiper', {\n  pagination: {\n    el: '.swiper-pagination',\n    \n    clickable: true\n    },\n\n    autoplay: {\n        delay: 5000,\n        stopOnLastSlide: false,\n        disableOnInteraction: false\n    },\n\n    speed: 500,\n\n    effect: 'fade',\n\n    fadeEffect: {\n        crossFade: true\n    },\n});"],"names":["e1","Swiper","pagination","el","clickable","autoplay","delay","stopOnLastSlide","disableOnInteraction","speed","effect","fadeEffect","crossFade","mobileMenu","document","querySelector","openMenuBtn","closeMenuBtn","toggleMenu","isMenuOpen","getAttribute","setAttribute","classList","toggle","bodyScrollLock","body","addEventListener","querySelectorAll","forEach","link","remove","window","matchMedia","e","matches","enableBodyScroll","refs","openModalBtn","closeModalBtn","modal","toggleModal","Element","prototype","msMatchesSelector","mozMatchesSelector","webkitMatchesSelector","t","this","o","ownerDocument","n","Boolean","closest","nodeType","parentNode","overlay","closeButtons","modalButtons","item","modalId","add","keyCode"],"version":3,"file":"index.130add3a.js.map"}